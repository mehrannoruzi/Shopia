@model TempOrderDetail
@{
    Layout = null;
}
<div id="add-wrapper">
    <form id="frm-item">
        <div class="row">
            <div class="col-12">
                <custom-select-for for="ProductId"
                                   select-data-url="@Url.Action("Search","StoreProduct")" />
            </div>
            <div class="col-12 col-sm-4">
                <custom-input-for for="Count" class="form-control ltr-elm" />
            </div>
            <div class="col-12 col-sm-4">
                <custom-input-for for="Price" class="form-control ltr-elm" />
            </div>
            <div class="col-12 col-sm-4">
                <custom-input-for for="TotalPrice" class="form-control ltr-elm" readonly="true" />
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-info float-left" id="btn-add-item">
                    @Strings.Add
                </button>
            </div>
        </div>
    </form>
    <hr />
    <div id="items-wrapper" class="d-none">
        <table class="table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>@Strings.Product  @Strings.Name</th>
                    <th>@Strings.Count</th>
                    <th>@Strings.Price</th>
                    <th>@Strings.TotalPrice</th>
                    <th>@Strings.Delete</th>
                </tr>
            </thead>
            <tbody id="items">
            </tbody>
        </table>
    </div>
</div>

<div class="custom-modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">@Strings.Close</button>
    <custom-button text="@Strings.Submit"
                   icon="zmdi zmdi-floppy"
                   class="btn-primary btn-submit-items float-left"
                   data-url="@Url.Action("Add","StoreTempOrderDetail")"></custom-button>
</div>
<script>
    items = [];
    item = {};
    $('#ProductId').select2({
        placeholder: strings.pleaseSelect,
        searchInputPlaceholder: strings.searchHere,
        allowClear: true,
        language: {
            noResults: function () {
                return strings.thereIsNoResult;
            },
            searching: function () { return strings.searching; },
            inputTooShort: function () { return ''; }
        },
        minimumInputLength: 3,
        ajax: {
            url: $('#ProductId').attr('data-url'),
            dataType: 'json',
            data: function (params) {
                var query = {
                    q: params.term
                };
                return query;
            },
            processResults: function (data) {
                products = data.map(function (p) {
                    return {
                        id: p.Id,
                        name: p.Name,
                        price: p.Price
                    };
                });
                return {
                    results: data.map(x => ({ text: x.Name, id: x.Id }))
                };
            }
        }
    });
</script>